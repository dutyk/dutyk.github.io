{"pages":[],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/02/22/hello-world/"},{"title":"我的第一篇博客","text":"初次使用githubpage部署博客，很激动。我的想法很简单。 代码示例 123456789public String getPlayUrl(String locationUrl) { Document result = JsoupUtils.getDocWithPhone(locationUrl); String text = StringEscapeUtils.unescapeJava(result.text()); text = text.replace(&quot;vjs_149067353337651(&quot;, &quot;&quot;); text = text.replace(&quot;);&quot;, &quot;&quot;); JSONObject videoJson = JSONObject.parseObject(text); String playUrl = videoJson.getJSONArray(&quot;nodelist&quot;).getJSONObject(0).getString(&quot;location&quot;); return playUrl;} 平时没事多写写博客。 可以用阿里OSS存储图片，非常方便。 代码示例二 12345678910111213141516171819202122232425262728@Overridepublic List&lt;Episode&gt; parseEpisodes(String videoUrl) { List&lt;Episode&gt; episodes = new ArrayList&lt;&gt;(); Document document = JsoupUtils.getDocWithPhone(videoUrl); Matcher matcher = Pattern.compile(&quot;([0-9]{5,})\\\\.html&quot;).matcher(document.html()); if (matcher.find()) { String vid = matcher.group(1); String videosAPI = String.format(LETV_VIDEOS, vid); String data = JsoupUtils.getDocWithPhone(videosAPI).body().text(); JSONObject jsonObject = JSONObject.parseObject(data); JSONArray array = jsonObject.getJSONObject(&quot;data&quot;).getJSONObject(&quot;episode&quot;).getJSONArray(&quot;videolist&quot;); if (array.size() &gt; 1) { for (int i = array.size() - 1; i &gt;= 0; i--) { JSONObject object = array.getJSONObject(i); Episode episode = new Episode(); Integer index = object.getInteger(&quot;episode&quot;); if (index &lt; 10) { episode.setIndex(&quot;0&quot; + index); } else { episode.setIndex(&quot;&quot; + index); } episode.setValue(object.getString(&quot;url&quot;)); episodes.add(episode); } } } return episodes;} 代码示例三 123456789101112private String matchVid(String videoUrl) { Matcher matcher = Pattern.compile(VID_REGEX).matcher(videoUrl); if (matcher.find()) { return matcher.group(1); } else { Document realDocument = JsoupUtils.getDocWithPC(videoUrl); matcher = Pattern.compile(&quot;vid:\\&quot;(.*?)\\&quot;&quot;).matcher(realDocument.html()); if (matcher.find()) return matcher.group(1); throw new AnyException(ExceptionEnum.VID_CANNOT_MATCH); }}","link":"/2020/02/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"杂记","slug":"杂记","link":"/tags/%E6%9D%82%E8%AE%B0/"}],"categories":[{"name":"杂记","slug":"杂记","link":"/categories/%E6%9D%82%E8%AE%B0/"}]}